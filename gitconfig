[user]
    name = Yavor Mihaylov
    email = yavor.st.m@gmail.com
    username = ymihaylov
[push]
    default = simple
[core]
    editor = subl -n -w
[alias]
    co = checkout
    ci = commit
    cm = commit -m
    pl = pull
    st = status
    br = branch
    mrg = merge
    chp = cherry-pick

    # Pretty log of commits. Supports options of git log
    # The 8-char abbreviation works well with the default pretty format below
    l = log --abbrev-commit --abbrev=8

    # Same as l, but with graph.
    # Recursive resolving of aliases break tab-completion for options,
    # so the command is listed again.
    lg = log --abbrev-commit --abbrev=8 --graph

    # Log with --name-status
    lns = log --name-status

    # Rebase to master branch
    rbm = rebase master

    # Rebase to staging branch
    rbs = rebase staging

    # Compare branch to master, usually performmed right after rbm
    dfm = diff master

    # Compare branch to staging, usually performmed right after rbs
    dfs = diff staging

    # Remove branches that have already been merged with master
    dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

    # Amend the currently staged files to the last commit
    # See`git help commit
    # amend = commit --amend --reuse-message=HEAD

    # Checkout staging and merge current branch to it
    # mrgst = "!curBranch=`git rev-parse --abbrev-ref HEAD`;git co staging;echo \"Merging $curBranch to staging\";git merge $curBranch;"

    # Rebase current branch to staging, checkout staging and merge current branch to it
    # rbmst = "!git rebase staging && curBranch=`git rev-parse --abbrev-ref HEAD`;git co staging;echo \"Merging $curBranch to staging\";git merge $curBranch;"

# [diff-so-fancy]
# Configure diff-so-fancy with ASCII separators
# https://github.com/so-fancy/diff-so-fancy
#   useUnicodeRuler = false

# [diff "asciidiff"]
#   textconv = /usr/bin/img-ascii-diff

# [interactive]
#   diffFilter = diff-so-fancy | less --tabs=4 --RAW-CONTROL-CHARS --quit-if-one-screen --no-init --tilde --status-column --HILITE-UNREAD

[pager]
    # Use colors when paging regardless of default color setting.
    # color = true
    # diff = diff-so-fancy | less --tabs=4 --RAW-CONTROL-CHARS --quit-if-one-screen --no-init --tilde --status-column --HILITE-UNREAD
    # show = diff-so-fancy | less --tabs=4 --RAW-CONTROL-CHARS --quit-if-one-screen --no-init --tilde --status-column --HILITE-UNREAD


[color]
    # Use colors in Git commands that are capable of colored output when
        # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
    ui = auto

[format]
    pretty = colourful

[pretty]
    colourful = "format:%Cred%<(8)%h%Creset %<(75,trunc)%s %Cgreen%<(11)%cr%Creset%Cblue%<(17)% aN%Creset%C(yellow)% D%Creset %gN"
    live = "format:%Cred%<(6)%h%Creset %<(50,trunc)%s%C(yellow)% D%Creset %gN"
